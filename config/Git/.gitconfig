[user]
   name = sethfuller
   email = sethfuller@mac.com

[core]
   autocrlf = input
   whitespace = cr-at-eol

[alias]
# Use shell alias gal to see all aliases with comments
	alias = ! git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
# Delete branch (force delete)
	brd = branch --delete --force
# List remote branch
	brr = ! git branch --remote
# Git current branch name
        brc = rev-parse --abbrev-ref HEAD
# Checkout
	ch = checkout
	chb = checkout -b
	co = checkout
	cob = checkout -b
# Commit
	cm = commit -m
# Show diffs of cached/added files with HEAD
	dc = diff --cached
# Diff showing all conflicted files
	dcon = diff --name-only --diff-filter=U
# Show diff of changes for last commit
        dlc = dc HEAD^
# Show diff of a commit given commit SHA-1
        dr  = "!f() { git diff "$1"^.."$1"; }; f"
# List last commit with files changed
	dl = ll -1
#  List last commit
	last = log -1
# Find file names containing argument
        f = ! git ls-files | grep 
# Find file names containing argument (case insensitive)
        fi = ! git ls-files | grep -i
# Search entire code base for a string
        gr = grep -I
# Grep from root folder
        gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
# Search entire code base for a string (case insensitive)
        gri = gr -i
# List with ll (below) for a commit given SHA-1
        lc  = "!f() { git ll "$1"^.."$1"; }; f"
# List commits with files changed
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
# List commits with diffs(patch) of files changed
	lp = log -p
# Pull/Push
        pl = pull
        ph = push
# Push a local branch to remote (origin)
        phu = push --set-upstream origin
# Reset added file(s) to un-added (append path/to/file)
        rsa = restore --staged
# Status aliases (-s short form)
	st = status
	sts = status -s
# Git diff stash
# Use shell function _gsd [stash_no:default=0]
# Show Fetch and Push URLS for Repository
	rv = remote -v
   
    find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
    show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"

[pull]
	rebase = false
